create sequence client_ids
start with 100
increment by 1;

drop sequence client_ids;

create table custom_TMP_clients (
       id number primary key,
       name varchar2(32) not null,
       patronymic varchar2(64) null,
       surname varchar2(64) not null,
       al_cdate date default sysdate
)
partition by range (al_cdate)
interval(interval '1' month)
subpartition by hash (id)
subpartitions 8
(
       partition p1 values less than (date '2022-01-01')
)
compress;

drop table custom_TMP_clients;

create table custom_TMP_adress (
       id number generated by default on null as identity,
       cust_id number references custom_TMP_clients not null,
       adress varchar2(256) not null,
       branch number not null,
       al_cdate date default sysdate 
)
partition by list(branch)
(
 partition t1 values (1),
 partition t2 values (15),
 partition t3 values (1000) 
);

drop table custom_TMP_adress;

create index  indx_custom_TMP_address_adr on 
custom_TMP_adress(cust_id) local;

create or replace procedure fill_tables
       (count_row_client_table in number,
        count_row_adress_table in number)
is
        fk_client number := client_ids.nextval;
begin
        for cntr in 1..count_row_client_table
        loop
          insert into custom_TMP_clients (id, name, surname) 
          values (client_ids.nextval, dbms_random.string('x', 10),
                  dbms_random.string('x', 10));
        end loop;
        
        for cntr in 1..count_row_adress_table
        loop
          insert into custom_TMP_adress (cust_id, adress, branch)
          values (MOD(cntr, 3) + fk_client + 1,
                  dbms_random.string('x', 10),
                 15);
        end loop;
end;

select client_ids.nextval from fes_work;

begin
  fill_tables(4,4);
end;

select * from custom_TMP_clients;
select * from custom_tmp_adress;

delete from custom_TMP_clients;
delete from custom_tmp_adress;

create or replace procedure tmp_deduplicate
       (client_id in number,
        branch_id in number)
is
        count_adrs number := 0;
begin
        select count(*) into count_adrs 
               from custom_tmp_adress cta
               where cta.branch = branch_id and cta.cust_id = client_id;
        
        if count_adrs >= 2 then
           delete from custom_tmp_adress cta
                  where rowid not in (select distinct last_value(cta.rowid) over(order by cta.al_cdate asc)       -- здесь могло быть поле даты, но в нашем случае даты абсолютно одинаковые, поэтому смотрим по rowid
                                      from custom_tmp_adress cta 
                                      where cta.branch = branch_id and cta.cust_id = client_id
                                     ) and cta.branch = branch_id and cta.cust_id = client_id;
        end if;
end;

select * from custom_TMP_clients;
select * from custom_tmp_adress;

begin
        tmp_deduplicate(112, 15);                             
end;

create or replace function tmp_link_consists
          return integer
is
          res integer;
begin
          select count(*) 
                 into res 
                 from custom_tmp_adress
                 where cust_id not in (select id from custom_TMP_clients);
          
          if res != 0 then 
            dbms_output.put_line('false');
          else
            dbms_output.put_line('true');
          end if;
return  res;
end; 

select * from custom_TMP_clients;
select * from custom_tmp_adress;

begin 
       dbms_output.put_line(tmp_link_consists());
end;

-- SCD (таски на версионирование)
create sequence load_ids
start with 100
increment by 1;

create table i_TMP_clients (
       id number primary key,
       name varchar2(32) not null,
       patronymic varchar2(64) null,
       surname varchar2(64) not null,
       al_cdate date default sysdate
)
partition by range (al_cdate)
interval(interval '1' month)
subpartition by hash (id)
subpartitions 8
(
       partition p1 values less than (date '2022-01-01')
)
compress;

drop table i_TMP_clients;

create table custom_TMP_clients (
       id number primary key,
       name varchar2(32) not null,
       patronymic varchar2(64) null,
       surname varchar2(64) not null,
       al_cdate date default sysdate,
       t_changed varchar2(1 char) not null,
       al_udate date default sysdate,
       t_load_id number not null
)
partition by range (al_cdate)
interval(interval '1' month)
subpartition by hash (id)
subpartitions 8
(
       partition p1 values less than (date '2022-01-01')
)
compress;

drop table custom_TMP_clients;
drop table custom_TMP_adress;

select * from custom_TMP_clients;
insert all 

insert into custom_TMP_clients(id, name, surname, t_changed, t_load_id) 
values (client_ids.nextval, 'John', 'Collins', '1', load_ids.nextval);

insert into custom_TMP_clients(id, name, surname, t_changed, t_load_id) 
values (client_ids.nextval, 'Lisa', 'Fox', '2', load_ids.nextval);

insert into custom_TMP_clients(id, name, surname, t_changed, t_load_id) 
values (client_ids.nextval, 'Kate', 'Patric', '1', load_ids.nextval);

insert into custom_TMP_clients(id, name, surname, t_changed, t_load_id) 
values (client_ids.nextval, 'Alex', 'Winston', '1', load_ids.nextval);

insert into custom_TMP_clients(id, name, surname, t_changed, t_load_id) 
values (client_ids.nextval, 'Molly', 'Chase', '2', load_ids.nextval);

insert into custom_TMP_clients(id, name, surname, t_changed, t_load_id) 
values (client_ids.nextval, 'Edward', 'Paker', '1', load_ids.nextval);

insert into custom_TMP_clients(id, name, surname, t_changed, t_load_id) 
values (client_ids.nextval, 'Tom', 'Shell', '2', load_ids.nextval);

select * from custom_TMP_clients;
----------------------------------------------------------------------------

insert into i_TMP_clients(id, name, surname) 
values (157, 'John', 'Collins');

insert into i_TMP_clients(id, name, surname) 
values (158, 'Lisa', 'Fox');

insert into i_TMP_clients(id, name, surname) 
values (159, 'Kate', 'Patric');

insert into i_TMP_clients(id, name, surname) 
values (160, 'Alex', 'Malboro');

insert into i_TMP_clients(id, name, surname) 
values (161, 'Molly', 'Fox');

insert into i_TMP_clients(id, name, surname) 
values (client_ids.nextval, 'Jale', 'Spy');

insert into i_TMP_clients(id, name, surname) 
values (client_ids.nextval, 'Cony', 'Newrby');

select * from i_TMP_clients;

create or replace procedure scd1
          (load_id in number)
is
          cursor i_client_cur is
                 select * from i_TMP_clients order by id;
          i_client_rec i_client_cur%rowtype;
          
          cursor client_cur is
                 select * from custom_TMP_clients order by id;
          client_rec client_cur%rowtype;
    
          exists_in_main_table number;
begin
          open i_client_cur;
          open client_cur;
          
          fetch i_client_cur into i_client_rec;    
          fetch client_cur into client_rec;
          
          loop 
               if i_client_rec.id = client_rec.id 
               then
                  dbms_output.put_line(client_rec.id);
                  dbms_output.put_line(i_client_rec.id);  
               
                  if i_client_rec.name != client_rec.name or i_client_rec.surname != client_rec.surname -- update
                  then
                     update custom_TMP_clients set name = i_client_rec.name, 
                                            surname = i_client_rec.surname,
                                            t_changed = '2',
                                            t_load_id = load_id,
                                            al_udate = sysdate 
                     where id = i_client_rec.id;
                  end if;
               fetch i_client_cur into i_client_rec;
               exit when i_client_cur%notfound;
               
               fetch client_cur into client_rec;
               exit when client_cur%notfound;
               
               elsif i_client_rec.id > client_rec.id  -- delete                  
               then
                     update custom_TMP_clients set t_changed = '3',
                                                   t_load_id = load_id,
                                                   al_udate = sysdate
                     where id = client_rec.id;
                     
                     fetch client_cur into client_rec;
                     exit when client_cur%notfound;
               else                                   -- insert
                     insert into custom_TMP_clients(id, 
                                               name, 
                                               surname,
                                               al_cdate,
                                               t_changed,
                                               al_udate,
                                               t_load_id
                                               )
                     values (i_client_rec.id,
                             i_client_rec.name,
                             i_client_rec.surname,
                             i_client_rec.al_cdate,
                             '1',
                             sysdate,
                             load_id);
                     
                     fetch i_client_cur into i_client_rec;
                     exit when i_client_cur%notfound;
               end if;                                        
               dbms_output.put_line('llllllllllllll');                                               
          end loop;
          
          if not client_cur%notfound           -- оставшиеся удалены
          then
             fetch client_cur into client_rec;
             update custom_TMP_clients set t_changed = '3',
                                           t_load_id = load_id,
                                           al_udate = sysdate
             where id >= client_rec.id;
          end if;
          
          if not i_client_cur%notfound
          then
             fetch i_client_cur into i_client_rec;
             insert into custom_TMP_clients(id, 
                                               name, 
                                               surname,
                                               al_cdate,
                                               t_changed,
                                               al_udate,
                                               t_load_id
                                               )
                     select itc.id,
                            itc.name,
                            itc.surname,
                            itc.al_cdate,
                            '1',
                            sysdate,
                            load_id from i_TMP_clients itc where itc.id >= i_client_rec.id;
          end if;
          
          close i_client_cur;    
          close client_cur;      
end;

select * from custom_TMP_clients order by id;
select * from i_TMP_clients order by id;

delete from custom_TMP_clients;
delete from i_TMP_clients;

begin
        scd1(150);  
end;


